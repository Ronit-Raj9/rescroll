{
	"info": {
		"_postman_id": "7e9a1b2c-3d4e-5f6a-7b8c-9d0e1f2a3b4c",
		"name": "Rescroll API",
		"description": "A collection for testing the Rescroll API endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"user@example.com\",\n  \"username\": \"username\",\n  \"password\": \"password123\",\n  \"full_name\": \"User Name\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Creates a new user account"
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"access_token\", jsonData.access_token);",
									"pm.environment.set(\"refresh_token\", jsonData.refresh_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "user@example.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "password123",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Authenticates a user and returns access and refresh tokens"
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"access_token\", jsonData.access_token);",
									"pm.environment.set(\"refresh_token\", jsonData.refresh_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"refresh_token\": \"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/refresh-token",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"refresh-token"
							]
						},
						"description": "Refreshes an expired access token using a valid refresh token"
					},
					"response": []
				},
				{
					"name": "Test Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/auth/test-token",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"test-token"
							]
						},
						"description": "Tests if an access token is valid"
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/auth/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"logout"
							]
						},
						"description": "Logs out a user by clearing authentication cookies"
					},
					"response": []
				},
				{
					"name": "Password Recovery",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/auth/password-recovery/user@example.com",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"password-recovery",
								"user@example.com"
							]
						},
						"description": "Initiates the password recovery process by sending a reset token"
					},
					"response": []
				},
				{
					"name": "Reset Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"new_password\": \"new_password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/reset-password/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"reset-password",
								""
							]
						},
						"description": "Resets a user's password using a valid reset token"
					},
					"response": []
				}
			],
			"description": "Authentication-related endpoints"
		},
		{
			"name": "User Management",
			"item": [
				{
					"name": "Get Current User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"me"
							]
						},
						"description": "Retrieves the currently authenticated user"
					},
					"response": []
				},
				{
					"name": "Update Current User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"full_name\": \"Updated Name\",\n  \"email\": \"updated@example.com\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/users/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"me"
							]
						},
						"description": "Updates the currently authenticated user's information"
					},
					"response": []
				},
				{
					"name": "Get Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/?skip=0&limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								""
							],
							"query": [
								{
									"key": "skip",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Retrieves a list of users (admin only)"
					},
					"response": []
				}
			],
			"description": "User management endpoints"
		},
		{
			"name": "Profile Images",
			"item": [
				{
					"name": "Upload Profile Image",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/path/to/image.jpg"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/users/me/profile-image",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"me",
								"profile-image"
							]
						},
						"description": "Uploads a profile image for the current user"
					},
					"response": []
				},
				{
					"name": "Delete Profile Image",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/me/profile-image",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"me",
								"profile-image"
							]
						},
						"description": "Deletes the profile image for the current user"
					},
					"response": []
				}
			],
			"description": "Profile image management endpoints"
		},
		{
			"name": "Papers",
			"item": [
				{
					"name": "Search Papers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/papers/search/?query=quantum computing&start=0&max_results=5",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"papers",
								"search",
								""
							],
							"query": [
								{
									"key": "query",
									"value": "quantum computing"
								},
								{
									"key": "start",
									"value": "0"
								},
								{
									"key": "max_results",
									"value": "5"
								}
							]
						},
						"description": "Search for papers on arXiv based on a query string"
					},
					"response": []
				},
				{
					"name": "Get Paper Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/papers/arxiv/2304.12345",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"papers",
								"arxiv",
								"2304.12345"
							]
						},
						"description": "Get detailed information about a specific paper from arXiv"
					},
					"response": []
				},
				{
					"name": "Get Paper Summary",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/papers/arxiv/2304.12345/summary",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"papers",
								"arxiv",
								"2304.12345",
								"summary"
							]
						},
						"description": "Generate an AI-powered summary for a specific paper using Google's Gemini AI"
					},
					"response": []
				}
			],
			"description": "Paper search and summary endpoints"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000/api/v1"
		}
	]
} 