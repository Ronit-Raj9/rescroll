"""create user table

Revision ID: 7fcab45d1a38
Revises: 65235e3d815d
Create Date: 2025-03-24 23:55:20.090358

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7fcab45d1a38'
down_revision: Union[str, None] = '65235e3d815d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_interests')
    op.drop_index('ix_test_users_email', table_name='test_users')
    op.drop_index('ix_test_users_full_name', table_name='test_users')
    op.drop_index('ix_test_users_id', table_name='test_users')
    op.drop_index('ix_test_users_username', table_name='test_users')
    op.drop_table('test_users')
    op.drop_index('ix_paper_summary_requests_id', table_name='paper_summary_requests')
    op.drop_index('ix_paper_summary_requests_paper_id', table_name='paper_summary_requests')
    op.drop_table('paper_summary_requests')
    op.drop_index('ix_weekly_progress_id', table_name='weekly_progress')
    op.drop_table('weekly_progress')
    op.drop_index('ix_researchpaper_doi', table_name='researchpaper')
    op.drop_index('ix_researchpaper_id', table_name='researchpaper')
    op.drop_table('researchpaper')
    op.drop_index('ix_user_preferences_id', table_name='user_preferences')
    op.drop_table('user_preferences')
    op.drop_index('ix_newsreport_id', table_name='newsreport')
    op.drop_index('ix_newsreport_url', table_name='newsreport')
    op.drop_table('newsreport')
    op.drop_index('ix_reading_history_id', table_name='reading_history')
    op.drop_table('reading_history')
    op.drop_index('ix_topics_id', table_name='topics')
    op.drop_index('ix_topics_name', table_name='topics')
    op.drop_table('topics')
    op.drop_index('ix_quiz_results_id', table_name='quiz_results')
    op.drop_table('quiz_results')
    op.add_column('users', sa.Column('is_admin', sa.Boolean(), nullable=True))
    op.drop_index('ix_users_full_name', table_name='users')
    op.drop_column('users', 'is_superuser')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.create_index('ix_users_full_name', 'users', ['full_name'], unique=False)
    op.drop_column('users', 'is_admin')
    op.create_table('quiz_results',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('article_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('answers', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='quiz_results_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='quiz_results_pkey')
    )
    op.create_index('ix_quiz_results_id', 'quiz_results', ['id'], unique=False)
    op.create_table('topics',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('topics_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='topics_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_topics_name', 'topics', ['name'], unique=True)
    op.create_index('ix_topics_id', 'topics', ['id'], unique=False)
    op.create_table('reading_history',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('article_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('read_date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('time_spent', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='reading_history_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='reading_history_pkey')
    )
    op.create_index('ix_reading_history_id', 'reading_history', ['id'], unique=False)
    op.create_table('newsreport',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('source', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('author', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('url', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('image_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('published_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('category', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('is_premium', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='newsreport_pkey')
    )
    op.create_index('ix_newsreport_url', 'newsreport', ['url'], unique=True)
    op.create_index('ix_newsreport_id', 'newsreport', ['id'], unique=False)
    op.create_table('user_preferences',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('email_notifications', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('push_notifications', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('theme', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('language', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('font_size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('reading_mode', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('quiz_difficulty', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('quiz_frequency', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('custom_settings', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('reading_preferences', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_preferences_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_preferences_pkey'),
    sa.UniqueConstraint('user_id', name='user_preferences_user_id_key')
    )
    op.create_index('ix_user_preferences_id', 'user_preferences', ['id'], unique=False)
    op.create_table('researchpaper',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('authors', sa.VARCHAR(length=1000), autoincrement=False, nullable=True),
    sa.Column('abstract', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('doi', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('url', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('pdf_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('journal', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('publication_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('citation_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('domain', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('keywords', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('is_open_access', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='researchpaper_pkey')
    )
    op.create_index('ix_researchpaper_id', 'researchpaper', ['id'], unique=False)
    op.create_index('ix_researchpaper_doi', 'researchpaper', ['doi'], unique=True)
    op.create_table('weekly_progress',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('week_start', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('week_end', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('articles_read', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_reading_time', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('domains_covered', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('quiz_scores', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('streak_maintained', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='weekly_progress_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='weekly_progress_pkey')
    )
    op.create_index('ix_weekly_progress_id', 'weekly_progress', ['id'], unique=False)
    op.create_table('paper_summary_requests',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('paper_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('paper_title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('summary', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('error', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_completed', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('completed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='paper_summary_requests_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='paper_summary_requests_pkey')
    )
    op.create_index('ix_paper_summary_requests_paper_id', 'paper_summary_requests', ['paper_id'], unique=False)
    op.create_index('ix_paper_summary_requests_id', 'paper_summary_requests', ['id'], unique=False)
    op.create_table('test_users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('full_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='test_users_pkey')
    )
    op.create_index('ix_test_users_username', 'test_users', ['username'], unique=True)
    op.create_index('ix_test_users_id', 'test_users', ['id'], unique=False)
    op.create_index('ix_test_users_full_name', 'test_users', ['full_name'], unique=False)
    op.create_index('ix_test_users_email', 'test_users', ['email'], unique=True)
    op.create_table('user_interests',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('topic_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], name='user_interests_topic_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_interests_user_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', 'topic_id', name='user_interests_pkey')
    )
    # ### end Alembic commands ###
